-- Function to raise the turtle 3 blocks up
function riseUp(levels)
    for i = 1, levels do
        turtle.up()
    end
end

-- Function to determine facing direction
function determineDirection()
    local startX, startY, startZ = gps.locate(5)
    turtle.forward()
    local newX, newY, newZ = gps.locate(5)
    
    local initialFacing = ""
    
    -- Determine initial facing direction
    if newX > startX then
        initialFacing = "East"
    elseif newX < startX then
        initialFacing = "West"
    elseif newZ > startZ then
        initialFacing = "South"
    elseif newZ < startZ then
        initialFacing = "North"
    end
    
    turtle.back() -- Move back to original position
    
    return initialFacing -- Return the direction as a string
end

    turtle.back()  -- Move back to original position
    turtle.turnLeft()  -- Turn left and check new direction
    turtle.forward()
    turtle.back()
    turtle.turnRight()  -- Realign to original facing direction

    return initialFacing  -- Return the direction as a string
end

    -- Move back to original position
    turtle.back()

    -- Turn left and move forward to check again
    turtle.turnLeft()
    print("Turned left.")
    turtle.forward()
    local checkX, checkY, checkZ = gps.locate(5)
    turtle.back()

    -- Correcting the logic for determining the new facing direction after turning left
    local newFacing = ""
    if initialFacing == "North" then
        newFacing = "West"
    elseif initialFacing == "West" then
        newFacing = "South"
    elseif initialFacing == "South" then
        newFacing = "East"
    elseif initialFacing == "East" then
        newFacing = "North"
    end
    print("After turning left, now facing " .. newFacing)

    turtle.turnRight() -- Realign to original facing before the check
end

function goToDock(xDock, yDock, zDock)
    local x, y, z = gps.locate(5)
    print("Current location: X=" .. x .. ", Y=" .. y .. ", Z=" .. z)
    local direction = determineDirection()
    print("Facing " .. direction)

    local direction = determineDirection()
    print("Facing " .. direction)
    os.sleep(2)  -- Waiting for 2-3 seconds before moving

    if direction == "North" or direction == "South" then
        -- Move along the Z-axis
        while z ~= zDock do
            if z < zDock then
                while not facing("South") do turtle.turnRight() end
                turtle.forward()
            elseif z > zDock then
                while not facing("North") do turtle.turnRight() end
                turtle.forward()
            end
            _, _, z = gps.locate(5)
        end
    elseif direction == "East" or direction == "West" then
        -- Move along the X-axis
        while x ~= xDock do
            if x < xDock then
                while not facing("East") do turtle.turnRight() end
                turtle.forward()
            elseif x > xDock then
                while not facing("West") do turtle.turnRight() end
                turtle.forward()
            end
            x, _, _ = gps.locate(5)
        end
    end

    -- Move along the Y-axis to the docking level, if needed
    while y ~= yDock do
        if y < yDock then
            turtle.up()
        elseif y > yDock then
            turtle.down()
        end
        _, y, _ = gps.locate(5)
    end

    print("Arrived at docking station: X=" .. xDock .. ", Y=" .. yDock .. ", Z=" .. zDock)
end

-- Example execution
goToDock(-337, 64, -16)

-- Main execution
riseUp(3)
determineDirection()

-- Function to raise the turtle 3 blocks up
function riseUp(levels)
    for i = 1, levels do
        turtle.up()
        print("Rising up, current level: " .. i)
    end
end

-- Function to determine facing direction
function determineDirection()
    local startX, startY, startZ = gps.locate(5)
    turtle.forward()
    local newX, newY, newZ = gps.locate(5)
    
    local initialFacing = ""
    
    -- Determine initial facing direction
    if newX > startX then
        initialFacing = "East"
    elseif newX < startX then
        initialFacing = "West"
    elseif newZ > startZ then
        initialFacing = "South"
    elseif newZ < startZ then
        initialFacing = "North"
    end
    
    turtle.back() -- Move back to original position
    print("Determined initial facing direction: " .. initialFacing)
    
    return initialFacing -- Return the direction as a string
end

function turnToFace(targetDirection)
    while true do
        local currentDirection = determineDirection()
        if currentDirection == targetDirection then
            break
        else
            turtle.turnLeft()
            print("Turning left to face " .. targetDirection)
        end
    end
end

function goToDock(xDock, yDock, zDock)
    local x, y, z = gps.locate(5)
    print("Current location: X=" .. x .. ", Y=" .. y .. ", Z=" .. z)
    local direction = determineDirection()
    print("Initial facing direction: " .. direction)
    os.sleep(2)  -- Waiting for 2-3 seconds before moving

    local movementCount = 0

    -- Turn to face the correct direction for X-axis movement
    if xDock > x then
        turnToFace("East")
    elseif xDock < x then
        turnToFace("West")
    end

    -- Move along the X-axis
    while x ~= xDock do
        turtle.forward()
        movementCount = movementCount + 1
        if movementCount % 30 == 0 then
            print("Moved 30 blocks along X-axis, re-checking position")
            x, _, _ = gps.locate(5)
            print("Current position: X=" .. x)
            if xDock > x then
                turnToFace("East")
            elseif xDock < x then
                turnToFace("West")
            end
        else
            x, _, _ = gps.locate(5)
        end
    end

    movementCount = 0

    -- Turn to face the correct direction for Z-axis movement
    if zDock > z then
        turnToFace("South")
    elseif zDock < z then
        turnToFace("North")
    end

    -- Move along the Z-axis
    while z ~= zDock do
        turtle.forward()
        movementCount = movementCount + 1
        if movementCount % 30 == 0 then
            print("Moved 30 blocks along Z-axis, re-checking position")
            _, _, z = gps.locate(5)
            print("Current position: Z=" .. z)
            if zDock > z then
                turnToFace("South")
            elseif zDock < z then
                turnToFace("North")
            end
        else
            _, _, z = gps.locate(5)
        end
    end

    -- Move along the Y-axis to the docking level
    while y ~= yDock do
        if y < yDock then
            turtle.up()
            print("Moving up along Y-axis")
        elseif y > yDock then
            turtle.down()
            print("Moving down along Y-axis")
        end
        _, y, _ = gps.locate(5)
        print("Current Y position: " .. y)
    end

    -- Face North when arrived at the docking station
    turnToFace("North")

    print("Arrived at docking station: X=" .. xDock .. ", Y=" .. yDock .. ", Z=" .. zDock)
    print("Facing North")
end

-- Main execution
riseUp(3)  -- Rise up 3 levels before moving to the docking station
determineDirection()  -- Determine the initial facing direction
goToDock(-337, 64, -16)  -- Move to the docking station
